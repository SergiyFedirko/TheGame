/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import app.MyMouseListener;
import app.Settings;
import data.Board;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static java.awt.image.ImageObserver.HEIGHT;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author student
 */
public class MainFrame extends javax.swing.JFrame {

    private Board board;
    private MyMouseListener mouseListener;
    Timer timer;
    int count = 0;
    int delay = 1000;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        board = new Board(10, 10);
        board.randomElements(1, 3);
        initComponents();
        Settings.SIZE = 10;
        Board.setSize(10 * 30 + 1, 10 * 30 + 1);
        mouseListener = new MyMouseListener();
        mouseListener.setMatrix(board);
        mouseListener.setPanel(Board);
        Board.addMouseListener(mouseListener);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jLabel1.setText(String.valueOf(mouseListener.getPunkty()));

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Board = new MatrixPanel(board);
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));
        getContentPane().setLayout(null);

        Board.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BoardMousePressed(evt);
            }
        });

        javax.swing.GroupLayout BoardLayout = new javax.swing.GroupLayout(Board);
        Board.setLayout(BoardLayout);
        BoardLayout.setHorizontalGroup(
            BoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        BoardLayout.setVerticalGroup(
            BoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(Board);
        Board.setBounds(20, 20, 290, 200);

        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(690, 210, 80, 23);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(690, 30, 110, 40);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3", "4", "5" }));
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(710, 90, 50, 20);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("10*10");
        getContentPane().add(jRadioButton1);
        jRadioButton1.setBounds(710, 130, 55, 23);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("15*15");
        getContentPane().add(jRadioButton2);
        jRadioButton2.setBounds(710, 150, 55, 23);

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("20*20");
        getContentPane().add(jRadioButton3);
        jRadioButton3.setBounds(710, 170, 55, 23);

        setSize(new java.awt.Dimension(827, 689));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (mouseListener.getClicks() != 0) {

            if (timer.isRunning()) {
                timer.stop();
            }
            mouseListener.setPunkty(0);
            jLabel1.setText(String.valueOf(mouseListener.getPunkty()));
            mouseListener.setClick(0);
        }
        if (jRadioButton1.isSelected()) {

            Settings.SIZE = 10;

            BoardRestart();
        }
        if (jRadioButton2.isSelected()) {

            Settings.SIZE = 15;
            BoardRestart();
        }
        if (jRadioButton3.isSelected()) {

            Settings.SIZE = 20;
            BoardRestart();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BoardRestart() throws NumberFormatException {
        board = new Board();
        ((MatrixPanel) Board).setMatrix(board);
        mouseListener.setMatrix(board);
        mouseListener.setClick(0);
        board.randomElements(1, Integer.valueOf(jComboBox1.getSelectedItem().toString()));
        Board.setSize(Settings.SIZE * 30 + 1, Settings.SIZE * 30 + 1);
        mouseListener.setClicks(0);
        repaint();
    }

    private void BoardMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BoardMousePressed
        if (mouseListener.getClicks() == 0) {
            startTimer(15);
        }
    }//GEN-LAST:event_BoardMousePressed

    public void startTimer(int countPassed) {
        ActionListener action = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                jLabel1.setText(String.valueOf(mouseListener.getPunkty()));
                timer.restart();

                if (count == 0) {
                    timer.stop();
                    if (mouseListener.getPunkty() < 500) {
                        startTimer(15);
                    }
                    if (mouseListener.getPunkty() >= 500 && mouseListener.getPunkty() < 1000) {
                        startTimer(12);
                    }
                    if (mouseListener.getPunkty() >= 1000 && mouseListener.getPunkty() < 2000) {
                        startTimer(9);
                    }
                    if (mouseListener.getPunkty() >= 2000 && mouseListener.getPunkty() < 4000) {
                        startTimer(6);
                    }
                    if (mouseListener.getPunkty() >= 4000 && mouseListener.getPunkty() < 8000) {
                        startTimer(3);
                    }

                    int s = 1;
                    for (int r = 0, k = board.getRowCount(); r < k; r++) {
                        //for (int i = 0, n = board.getRowCount(); i < n; i++) {
                        for (int j = 0, m = board.getColCount(); j < m; j++) {

                            if (board.getElement(r, j) == 0) {
                                //BoardRestart();
                                s = 0;
                            }

                        }
                    }
                    if (s != 0) {

                        timer.stop();
                        JOptionPane.showMessageDialog(rootPane, mouseListener.getPunkty(), "Game Over", HEIGHT);
                        BoardRestart();

                    } else {
                        for (int r = 0, k = board.getRowCount(); r < k; r = r + board.randomElement(0, Integer.valueOf(jComboBox1.getSelectedItem().toString()))) {
                            for (int j = 0, m = board.getColCount(); j < m; j++) {

                                if (board.getElement(r, j) == 0) {
                                    board.setElement(r, j, board.randomElement(1, Integer.valueOf(jComboBox1.getSelectedItem().toString())));
                                    board.randomElement(1, Integer.valueOf(jComboBox1.getSelectedItem().toString()));
                                    repaint();
                                }
                            }
                        }
                    }
                } else {
                    count--;
                    jLabel1.setText(String.valueOf(mouseListener.getPunkty()));
                }
                //throw new UnsupportedOperationException("Not supported yet."); 
            }
        };

        timer = new Timer(delay, action);
        timer.setInitialDelay(1000);
        timer.start();
        count = countPassed;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrame().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Board;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    // End of variables declaration//GEN-END:variables
}
